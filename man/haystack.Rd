% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/haystack.R
\name{haystack}
\alias{haystack}
\title{The main Haystack function, for 2-dimensional spaces.}
\usage{
haystack(x, y, detection, use.advanced.sampling = NULL,
  dir.randomization = NULL)
}
\arguments{
\item{x}{x-axis coordinates of cells in a 2D representation (e.g. resulting from PCA or t-SNE)}

\item{y}{y-axis coordinates of cells in a 2D representation}

\item{detection}{A logical matrix showing which genes (rows) are detected in which cells (columns)}

\item{use.advanced.sampling}{If NULL naive sampling is used. If a vector is given (of length = no. of cells) sampling is done according to the values in the vector.}

\item{dir.randomization}{If NULL, no output is made about the random sampling step. If not NULL, files related to the randomizations are printed to this directory.}
}
\value{
An object of class "haystack"
}
\description{
The main Haystack function, for 2-dimensional spaces.
}
\examples{
# using the toy example of the singleCellHaystack package
# define a logical matrix with detection of each gene (rows) in each cell (columns)
dat.detection <- dat.expression > 1

# running haystack in default mode
res <- haystack(x=dat.tsne$tSNE1, y=dat.tsne$tSNE2, detection=dat.detection)
# list top 10 biased genes
show_result_haystack(res.haystack = res, n =10)
# plot one of the genes
plot_gene_haystack(x=dat.tsne$tSNE1, y=dat.tsne$tSNE2, expression=dat.expression, gene="gene_242", detection = dat.detection, high.resolution = TRUE)

# to running haystack in advanced mode, first get number of genes detected in each cell
count.detected <- apply(dat.detection,2,sum)
# give count of detected genes as input to parameter use.advanced.sampling
res.adv <- haystack(x=dat.tsne$tSNE1, y=dat.tsne$tSNE2, detection=dat.detection, use.advanced.sampling = count.detected)
# list top 10 biased genes
show_result_haystack(res.haystack = res.adv, n =10)
}
